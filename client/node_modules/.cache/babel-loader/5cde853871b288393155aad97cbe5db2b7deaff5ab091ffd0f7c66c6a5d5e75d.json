{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport authService from \"./authService\";\n\n//Get user from local storage\nconst user = JSON.parse(localStorage.getItem(\"user\"));\nconst initialState = {\n  user: user ? user : null,\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: \"\"\n};\n\n// Register User\nexport const register = createAsyncThunk(\"auth/register\", async (user, thunkAPI) => {\n  try {\n    return await authService.register(user);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n//Get user details\nexport const getUsers = createAsyncThunk('users/getAll', async (_, thunkAPI) => {\n  try {\n    // const token = thunkAPI.getState().auth.user.token\n    return await authService.getUsers();\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\n// Update User\nexport const updateUser = createAsyncThunk(\"auth/updateUser\", async (user, thunkAPI) => {\n  try {\n    return await authService.updateUser(user);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\n// Login User\nexport const login = createAsyncThunk(\"auth/login\", async (user, thunkAPI) => {\n  try {\n    return await authService.login(user);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const logout = createAsyncThunk('auth/logout', async () => {\n  await authService.logout();\n});\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    reset: state => {\n      state.isLoading = false;\n      state.isError = false;\n      state.isSuccess = false;\n      state.message = \"\";\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(register.pending, state => {\n      state.isLoading = true;\n    }).addCase(register.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.user = action.payload;\n    }).addCase(register.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.isError = true;\n      state.message = action.payload;\n      state.user = null;\n    }).addCase(updateUser.pending, state => {\n      state.isLoading = true;\n    }).addCase(updateUser.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.user = action.payload;\n    }).addCase(updateUser.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.isError = true;\n      state.message = action.payload;\n      state.user = null;\n    }).addCase(login.pending, state => {\n      state.isLoading = true;\n    }).addCase(login.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.user = action.payload;\n    }).addCase(login.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.isError = true;\n      state.message = action.payload;\n      state.user = null;\n    }).addCase(logout.fulfilled, state => {\n      state.user = null;\n    }).addCase(getUsers.pending, state => {\n      state.isLoading = true;\n    }).addCase(getUsers.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.user = action.payload;\n    }).addCase(getUsers.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.isError = true;\n      state.message = action.payload;\n    });\n  }\n});\nexport const {\n  reset\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","authService","user","JSON","parse","localStorage","getItem","initialState","isError","isSuccess","isLoading","message","register","thunkAPI","error","response","data","toString","rejectWithValue","getUsers","_","updateUser","login","logout","authSlice","name","reducers","reset","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["/Users/macbook/Desktop/DESKSTOP/Crea8ive/Dog-dating-app/client/src/features/auth/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport authService from \"./authService\";\n\n//Get user from local storage\nconst user = JSON.parse(localStorage.getItem(\"user\"));\n\nconst initialState = {\n  user: user ? user : null,\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: \"\",\n};\n\n// Register User\nexport const register = createAsyncThunk(\n  \"auth/register\",\n  async (user, thunkAPI) => {\n    try {\n      return await authService.register(user);\n    } catch (error) {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString();\n      return thunkAPI.rejectWithValue(message);\n    }\n  }\n);\n//Get user details\nexport const getUsers = createAsyncThunk('users/getAll', async(_, thunkAPI) =>{\n  try {\n    // const token = thunkAPI.getState().auth.user.token\n    return await authService.getUsers()\n  } catch (error) {\n    const message =\n    (error.response &&\n      error.response.data &&\n      error.response.data.message) ||\n    error.message ||\n    error.toString();\n  return thunkAPI.rejectWithValue(message);\n  }\n})\n\n// Update User\nexport const updateUser = createAsyncThunk(\n  \"auth/updateUser\",\n  async (user, thunkAPI) => {\n    try {\n      return await authService.updateUser(user);\n    } catch (error) {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString();\n      return thunkAPI.rejectWithValue(message);\n    }\n  }\n);\n\n// Login User\nexport const login = createAsyncThunk(\n  \"auth/login\",\n  async (user, thunkAPI) => {\n    try {\n      return await authService.login(user);\n    } catch (error) {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString();\n      return thunkAPI.rejectWithValue(message);\n    }\n  }\n);\n\nexport const logout = createAsyncThunk('auth/logout', async () => {\n  await authService.logout()\n})\n\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    reset: (state) => {\n      state.isLoading = false;\n      state.isError = false;\n      state.isSuccess = false;\n      state.message = \"\";\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(register.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(register.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.isSuccess = true\n        state.user = action.payload\n      })\n      .addCase(register.rejected, (state, action) => {\n        state.isLoading = false\n        state.isSuccess = true\n        state.isError = true\n        state.message = action.payload\n        state.user = null\n      })\n      .addCase(updateUser.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(updateUser.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.isSuccess = true\n        state.user = action.payload\n      })\n      .addCase(updateUser.rejected, (state, action) => {\n        state.isLoading = false\n        state.isSuccess = true\n        state.isError = true\n        state.message = action.payload\n        state.user = null\n      })\n      .addCase(login.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(login.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.isSuccess = true\n        state.user = action.payload\n      })\n      .addCase(login.rejected, (state, action) => {\n        state.isLoading = false\n        state.isSuccess = true\n        state.isError = true\n        state.message = action.payload\n        state.user = null\n      })\n      .addCase(logout.fulfilled, (state) => {\n        state.user = null\n      })\n       .addCase(getUsers.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(getUsers.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.isSuccess = true\n        state.user = action.payload\n      })\n      .addCase(getUsers.rejected, (state, action) => {\n        state.isLoading = false\n        state.isSuccess = true\n        state.isError = true\n        state.message = action.payload\n      })\n  },\n});\n\nexport const { reset } = authSlice.actions;\nexport default authSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}